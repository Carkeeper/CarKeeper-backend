{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Arrays/Category.ts","webpack:///./src/app/Arrays/Colors.ts","webpack:///./src/app/Arrays/Genders.ts","webpack:///./src/app/Classes/Car.ts","webpack:///./src/app/Classes/CarAction.ts","webpack:///./src/app/Classes/MfgRecommendation.ts","webpack:///./src/app/Classes/User.ts","webpack:///./src/app/Directives/cardHostDirective/card-host.directive.ts","webpack:///./src/app/Directives/formHostDirective/form-host.directive.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/Add-Items/add-car-action/add-car-action.component.css","webpack:///./src/app/components/Add-Items/add-car-action/add-car-action.component.html","webpack:///./src/app/components/Add-Items/add-car-action/add-car-action.component.ts","webpack:///./src/app/components/Add-Items/add-car/add-car.component.css","webpack:///./src/app/components/Add-Items/add-car/add-car.component.html","webpack:///./src/app/components/Add-Items/add-car/add-car.component.ts","webpack:///./src/app/components/Add-Items/add-mfg-recommendation/add-mfg-recommendation.component.css","webpack:///./src/app/components/Add-Items/add-mfg-recommendation/add-mfg-recommendation.component.html","webpack:///./src/app/components/Add-Items/add-mfg-recommendation/add-mfg-recommendation.component.ts","webpack:///./src/app/components/Item-details/car-details/car-details.component.css","webpack:///./src/app/components/Item-details/car-details/car-details.component.html","webpack:///./src/app/components/Item-details/car-details/car-details.component.ts","webpack:///./src/app/components/Update-Items/update-car-action/update-car-action.component.css","webpack:///./src/app/components/Update-Items/update-car-action/update-car-action.component.html","webpack:///./src/app/components/Update-Items/update-car-action/update-car-action.component.ts","webpack:///./src/app/components/Update-Items/update-car/update-car.component.css","webpack:///./src/app/components/Update-Items/update-car/update-car.component.html","webpack:///./src/app/components/Update-Items/update-car/update-car.component.ts","webpack:///./src/app/components/Update-Items/update-user/update-user.component.css","webpack:///./src/app/components/Update-Items/update-user/update-user.component.html","webpack:///./src/app/components/Update-Items/update-user/update-user.component.ts","webpack:///./src/app/components/add-ons/add-ons.component.css","webpack:///./src/app/components/add-ons/add-ons.component.html","webpack:///./src/app/components/add-ons/add-ons.component.ts","webpack:///./src/app/components/app/app.component.css","webpack:///./src/app/components/app/app.component.html","webpack:///./src/app/components/app/app.component.ts","webpack:///./src/app/components/cards/car-action-card/car-action-card.component.css","webpack:///./src/app/components/cards/car-action-card/car-action-card.component.html","webpack:///./src/app/components/cards/car-action-card/car-action-card.component.ts","webpack:///./src/app/components/cards/car-card/car-card.component.css","webpack:///./src/app/components/cards/car-card/car-card.component.html","webpack:///./src/app/components/cards/car-card/car-card.component.ts","webpack:///./src/app/components/cards/general-card/general-card.component.css","webpack:///./src/app/components/cards/general-card/general-card.component.html","webpack:///./src/app/components/cards/general-card/general-card.component.ts","webpack:///./src/app/components/cards/mfg-recommendation-card/mfg-recommendation-card.component.css","webpack:///./src/app/components/cards/mfg-recommendation-card/mfg-recommendation-card.component.html","webpack:///./src/app/components/cards/mfg-recommendation-card/mfg-recommendation-card.component.ts","webpack:///./src/app/components/cards/mini-car-action-card/mini-car-action-card.component.css","webpack:///./src/app/components/cards/mini-car-action-card/mini-car-action-card.component.html","webpack:///./src/app/components/cards/mini-car-action-card/mini-car-action-card.component.ts","webpack:///./src/app/components/cards/mini-car-card/mini-car-card.component.css","webpack:///./src/app/components/cards/mini-car-card/mini-car-card.component.html","webpack:///./src/app/components/cards/mini-car-card/mini-car-card.component.ts","webpack:///./src/app/components/cards/mini-mfg-recommendation-card/mini-mfg-recommendation-card.component.css","webpack:///./src/app/components/cards/mini-mfg-recommendation-card/mini-mfg-recommendation-card.component.html","webpack:///./src/app/components/cards/mini-mfg-recommendation-card/mini-mfg-recommendation-card.component.ts","webpack:///./src/app/components/cards/user-card/user-card.component.css","webpack:///./src/app/components/cards/user-card/user-card.component.html","webpack:///./src/app/components/cards/user-card/user-card.component.ts","webpack:///./src/app/components/dashboards/actions-dashboard/actions-dashboard.component.css","webpack:///./src/app/components/dashboards/actions-dashboard/actions-dashboard.component.html","webpack:///./src/app/components/dashboards/actions-dashboard/actions-dashboard.component.ts","webpack:///./src/app/components/dashboards/general-dashboard/general-dashboard.component.css","webpack:///./src/app/components/dashboards/general-dashboard/general-dashboard.component.html","webpack:///./src/app/components/dashboards/general-dashboard/general-dashboard.component.ts","webpack:///./src/app/components/dashboards/main-dash-board/main-dash-board.component.css","webpack:///./src/app/components/dashboards/main-dash-board/main-dash-board.component.html","webpack:///./src/app/components/dashboards/main-dash-board/main-dash-board.component.ts","webpack:///./src/app/components/dashboards/mfg-recommendations-dashboard/mfg-recommendations-dashboard.component.css","webpack:///./src/app/components/dashboards/mfg-recommendations-dashboard/mfg-recommendations-dashboard.component.html","webpack:///./src/app/components/dashboards/mfg-recommendations-dashboard/mfg-recommendations-dashboard.component.ts","webpack:///./src/app/components/forms/car-action-form/car-action-form.component.css","webpack:///./src/app/components/forms/car-action-form/car-action-form.component.html","webpack:///./src/app/components/forms/car-action-form/car-action-form.component.ts","webpack:///./src/app/components/forms/car-form/car-form.component.css","webpack:///./src/app/components/forms/car-form/car-form.component.html","webpack:///./src/app/components/forms/car-form/car-form.component.ts","webpack:///./src/app/components/forms/general-form/general-form.component.css","webpack:///./src/app/components/forms/general-form/general-form.component.html","webpack:///./src/app/components/forms/general-form/general-form.component.ts","webpack:///./src/app/components/forms/user-form/user-form.component.css","webpack:///./src/app/components/forms/user-form/user-form.component.html","webpack:///./src/app/components/forms/user-form/user-form.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/nav-bar/nav-bar.component.css","webpack:///./src/app/components/nav-bar/nav-bar.component.html","webpack:///./src/app/components/nav-bar/nav-bar.component.ts","webpack:///./src/app/components/page-not-found-component/page-not-found-component.component.css","webpack:///./src/app/components/page-not-found-component/page-not-found-component.component.html","webpack:///./src/app/components/page-not-found-component/page-not-found-component.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/components/sign-in/sign-in.component.css","webpack:///./src/app/components/sign-in/sign-in.component.html","webpack:///./src/app/components/sign-in/sign-in.component.ts","webpack:///./src/app/routing/routing.module.ts","webpack:///./src/app/services/Api/api-data.service.ts","webpack:///./src/app/services/car/http-car.service.ts","webpack:///./src/app/services/carAction/http-car-action.service.ts","webpack:///./src/app/services/cardCompFact/card-comp-fact.service.ts","webpack:///./src/app/services/formCompFact/form-comp-factory.service.ts","webpack:///./src/app/services/mfgRecomondations/http-mfg-recommendations.service.ts","webpack:///./src/app/services/user/http-user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","export const category: string[] = [\r\n    'Supermini',\r\n    'Small family',\r\n    'Large family',\r\n    'Compact',\r\n    'Executive',\r\n    'Luxury',\r\n    'Van',\r\n    'Pick-up',\r\n    '4x4'\r\n];\r\n","export const colors: string[] = [\r\n    'White',\r\n    'Silver',\r\n    'Black',\r\n    'Grey',\r\n    'Blue',\r\n    'Red',\r\n    'Brown',\r\n    'Green',\r\n    'Yellow',\r\n];","export const genders: string[] = [\r\n    \"Male\",\r\n    \"Female\"\r\n]","import {Addon} from './Addon';\r\n\r\nexport class Car {\r\n    Id: any;\r\n    licensePlate: string;\r\n    make: string;\r\n    model: string;\r\n    color: string;\r\n    engineCode: string;\r\n    registrationDate: Date;\r\n    previousOwner: string;\r\n    mileage: number;\r\n    pictures: string; //files[]\r\n    addOns: Addon[];\r\n    category: string;\r\n    nextAction: any; //ActionId\r\n}","export class CarAction {\r\n    Id: any;\r\n    actionType: string;//enum\r\n    actionDate: Date;\r\n    cost: number;\r\n    pictures: string; //file[]\r\n    milageAtThatTime: number;\r\n    partsAffected: string; //string[]\r\n    actionProviderId: any;\r\n\r\n}","export class MfgRecommendation {\r\n    Id: any;\r\n    serviceName: string;\r\n    serviceOccurances: number;\r\n    approxCost: number;\r\n    relevantModel: string; //car[]\r\n    relevantModelYear: number; //Date Range\r\n}","export class User {\r\n    Id: any;\r\n    userName: string;\r\n    password: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    dateOfBirth: string;\r\n    gender: string;\r\n    phoneNumber: string;\r\n    email: string;\r\n    registrationDate: string;\r\n    street: string;\r\n    city: string;\r\n    country: string;\r\n}","import {Directive, ViewContainerRef} from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[appCardHost]'\r\n})\r\nexport class CardHostDirective {\r\n\r\n    constructor(public viewContainerRef: ViewContainerRef) {\r\n    }\r\n\r\n}\r\n","import {Directive, ViewContainerRef} from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[appFormHost]'\r\n})\r\nexport class FormHostDirective {\r\n\r\n    constructor(public viewContainerRef: ViewContainerRef) {\r\n    }\r\n\r\n}\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\nimport {AppComponent} from './components/app/app.component';\r\nimport {AddCarComponent} from './components/Add-Items/add-car/add-car.component';\r\nimport {AddCarActionComponent} from './components/Add-Items/add-car-action/add-car-action.component';\r\nimport {RegisterComponent} from './components/register/register.component';\r\nimport {NavBarComponent} from './components/nav-bar/nav-bar.component';\r\nimport {SignInComponent} from './components/sign-in/sign-in.component';\r\nimport {RoutingModule} from './routing/routing.module';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {PageNotFoundComponent} from './components/page-not-found-component/page-not-found-component.component';\r\nimport {CarDetailsComponent} from './components/Item-details/car-details/car-details.component';\r\nimport {GeneralFormComponent} from './components/forms/general-form/general-form.component';\r\nimport {UserFormComponent} from './components/forms/user-form/user-form.component';\r\nimport {FormHostDirective} from './Directives/formHostDirective/form-host.directive';\r\nimport {CarFormComponent} from './components/forms/car-form/car-form.component';\r\nimport { GeneralDashboardComponent } from './components/dashboards/general-dashboard/general-dashboard.component';\r\nimport { CardHostDirective } from './Directives/cardHostDirective/card-host.directive';\r\nimport { MiniCarCardComponent } from './components/cards/mini-car-card/mini-car-card.component';\r\nimport { MiniCarActionCardComponent } from './components/cards/mini-car-action-card/mini-car-action-card.component';\r\nimport { MiniMfgRecommendationCardComponent } from './components/cards/mini-mfg-recommendation-card/mini-mfg-recommendation-card.component';\r\nimport { GeneralCardComponent } from './components/cards/general-card/general-card.component';\r\nimport { CarActionFormComponent } from './components/forms/car-action-form/car-action-form.component';\r\nimport { MainDashBoardComponent } from './components/dashboards/main-dash-board/main-dash-board.component';\r\nimport { AddMfgRecommendationComponent } from './components/Add-Items/add-mfg-recommendation/add-mfg-recommendation.component';\r\nimport { UserCardComponent } from './components/cards/user-card/user-card.component';\r\nimport { CarCardComponent } from './components/cards/car-card/car-card.component';\r\nimport { CarActionCardComponent } from './components/cards/car-action-card/car-action-card.component';\r\nimport { MfgRecommendationCardComponent } from './components/cards/mfg-recommendation-card/mfg-recommendation-card.component';\r\nimport { AddOnsComponent } from './components/add-ons/add-ons.component';\r\nimport { UpdateCarComponent } from './components/Update-Items/update-car/update-car.component';\r\nimport { UpdateUserComponent } from './components/Update-Items/update-user/update-user.component';\r\nimport { UpdateCarActionComponent } from './components/Update-Items/update-car-action/update-car-action.component';\r\nimport {HomeComponent} from './components/home/home.component';\r\nimport { ActionsDashboardComponent } from './components/dashboards/actions-dashboard/actions-dashboard.component';\r\nimport { MfgRecommendationsDashboardComponent } from './components/dashboards/mfg-recommendations-dashboard/mfg-recommendations-dashboard.component';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        AddCarComponent,\r\n        AddCarActionComponent,\r\n        RegisterComponent,\r\n        NavBarComponent,\r\n        SignInComponent,\r\n        PageNotFoundComponent,\r\n        CarDetailsComponent,\r\n        GeneralFormComponent,\r\n        UserFormComponent,\r\n        FormHostDirective,\r\n        CarFormComponent,\r\n        GeneralDashboardComponent,\r\n        CardHostDirective,\r\n        MiniCarCardComponent,\r\n        MiniCarActionCardComponent,\r\n        MiniMfgRecommendationCardComponent,\r\n        GeneralCardComponent,\r\n        CarActionFormComponent,\r\n        MainDashBoardComponent,\r\n        AddMfgRecommendationComponent,\r\n        UserCardComponent,\r\n        CarCardComponent,\r\n        CarActionCardComponent,\r\n        MfgRecommendationCardComponent,\r\n        AddOnsComponent,\r\n        UpdateCarComponent,\r\n        UpdateUserComponent,\r\n        UpdateCarActionComponent,\r\n        HomeComponent,\r\n        ActionsDashboardComponent,\r\n        MfgRecommendationsDashboardComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        RoutingModule,\r\n        FormsModule,\r\n        HttpClientModule\r\n    ],\r\n    providers: [],\r\n    bootstrap: [AppComponent],\r\n    entryComponents: [\r\n        UserFormComponent,\r\n        CarFormComponent,\r\n        MiniCarCardComponent,\r\n        MiniCarActionCardComponent,\r\n        MiniMfgRecommendationCardComponent,\r\n    ]\r\n})\r\nexport class AppModule {\r\n}\r\n","module.exports = \"\"","module.exports = \"<app-general-form [data]=\\\"carAction\\\" [formType]=\\\"formType\\\"></app-general-form>\\r\\n\"","import { Component } from '@angular/core';\r\nimport {CarAction} from '../../../Classes/CarAction';\r\n\r\n@Component({\r\n  selector: 'app-add-car-action',\r\n  templateUrl: './add-car-action.component.html',\r\n  styleUrls: ['./add-car-action.component.css']\r\n})\r\nexport class AddCarActionComponent {\r\n\r\n    carAction: CarAction = new CarAction();\r\n    formType = 'carAction';\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<app-general-form [data]=\\\"car\\\" [formType]=\\\"formType\\\"></app-general-form>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {Car} from '../../../Classes/Car';\r\n\r\n@Component({\r\n    selector: 'app-add-car',\r\n    templateUrl: './add-car.component.html',\r\n    styleUrls: ['./add-car.component.css']\r\n})\r\nexport class AddCarComponent {\r\n\r\n    car: Car = new Car();\r\n    formType = 'car';\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<app-general-form [data]=\\\"mfgRecommendation\\\" [formType]=\\\"formType\\\"></app-general-form>\\r\\n\\r\\n\"","import { Component } from '@angular/core';\r\nimport {MfgRecommendation} from '../../../Classes/MfgRecommendation';\r\n\r\n@Component({\r\n  selector: 'app-add-mfg-recommendation',\r\n  templateUrl: './add-mfg-recommendation.component.html',\r\n  styleUrls: ['./add-mfg-recommendation.component.css']\r\n})\r\nexport class AddMfgRecommendationComponent  {\r\n\r\n    mfgRecommendation: MfgRecommendation = new MfgRecommendation();\r\n    formType = 'mfgRecomandation';\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n}\r\n","module.exports = \".container{\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n}\\r\\n\\r\\n.details{\\r\\n    width: 70%;\\r\\n}\\r\\n\\r\\n.sideBar{\\r\\n    width: 30%;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"details\\\">\\r\\n        <app-general-card [data]=\\\"car\\\" [ItemType]=\\\"ItemType\\\"></app-general-card>\\r\\n    </div>\\r\\n    <div class=\\\"sideBar\\\">\\r\\n        <ul class=\\\"nav flex-column\\\">\\r\\n            <li class=\\\"nav-item\\\">\\r\\n                <a routerLink=\\\"/car/{{car.Id}}/Actions\\\" routerLinkActive=\\\"active\\\" class=\\\"btn btn-primary\\\">Car Actions</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item\\\">\\r\\n                <a routerLink=\\\"/car/{{car.Id}}/Manufacturer-recommendations\\\" routerLinkActive=\\\"active\\\" class=\\\"btn btn-primary\\\">Manufacturer recommendations</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item\\\">\\r\\n                <a routerLink=\\\"/car/{{car.Id}}/Add-ons\\\" routerLinkActive=\\\"active\\\" class=\\\"btn btn-primary\\\">Add-ons</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item\\\">\\r\\n                <a class=\\\"nav-link disabled\\\" href=\\\"#\\\">Next Service</a>\\r\\n            </li>\\r\\n        </ul>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {HttpCarService} from '../../../services/car/http-car.service';\r\nimport {Car} from '../../../Classes/Car';\r\n\r\n@Component({\r\n    selector: 'app-car-details',\r\n    templateUrl: './car-details.component.html',\r\n    styleUrls: ['./car-details.component.css']\r\n})\r\nexport class CarDetailsComponent implements OnInit {\r\n\r\n    car: Car;\r\n    ItemType = 'car';\r\n\r\n    constructor(private route: ActivatedRoute, private httpCarService: HttpCarService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        const Id = this.route.snapshot.paramMap.get('id');\r\n        this.httpCarService.getCar(Id).subscribe(data => {\r\n            this.car = data;\r\n        });\r\n    }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\r\\n  update-car-action works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-update-car-action',\r\n  templateUrl: './update-car-action.component.html',\r\n  styleUrls: ['./update-car-action.component.css']\r\n})\r\nexport class UpdateCarActionComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<app-general-form [data]=\\\"car\\\" [formType]=\\\"formType\\\"></app-general-form>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {Car} from '../../../Classes/Car';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {HttpCarService} from '../../../services/car/http-car.service';\r\n\r\n@Component({\r\n    selector: 'app-update-car',\r\n    templateUrl: './update-car.component.html',\r\n    styleUrls: ['./update-car.component.css']\r\n})\r\nexport class UpdateCarComponent implements OnInit {\r\n\r\n    car: Car;\r\n    formType = 'car';\r\n\r\n    constructor(private route: ActivatedRoute, private httpCarService: HttpCarService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        const Id = this.route.snapshot.paramMap.get('id');\r\n        this.httpCarService.getCar(Id).subscribe(data => {\r\n            this.car = data;\r\n        });\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\r\\n  update-user works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-update-user',\r\n  templateUrl: './update-user.component.html',\r\n  styleUrls: ['./update-user.component.css']\r\n})\r\nexport class UpdateUserComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\r\\n  add-ons works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-add-ons',\r\n  templateUrl: './add-ons.component.html',\r\n  styleUrls: ['./add-ons.component.css']\r\n})\r\nexport class AddOnsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<app-nav-bar></app-nav-bar>\\r\\n<router-outlet></router-outlet>\"","import {Component} from '@angular/core';\r\nimport {ApiDataService} from '../../services/Api/api-data.service';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n\r\n    constructor(private api: ApiDataService) {\r\n    }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\r\\n  car-action-card works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-car-action-card',\r\n  templateUrl: './car-action-card.component.html',\r\n  styleUrls: ['./car-action-card.component.css']\r\n})\r\nexport class CarActionCardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"card-block\\\">\\r\\n  <h4 class=\\\"card-title\\\">{{data.make + \\\" \\\" + data.model}}</h4>\\r\\n  <ul class=\\\"list-group list-group-flush\\\">\\r\\n    <li class=\\\"list-group-item\\\">{{'license Plate:' + \\\" \\\" + data.licensePlate}}</li>\\r\\n    <li class=\\\"list-group-item\\\">{{'Mileage:' + \\\" \\\" + data.mileage}}</li>\\r\\n    <li class=\\\"list-group-item\\\">{{'next Action:' + \\\" \\\" + data.nextAction}}</li>\\r\\n    <li class=\\\"list-group-item\\\">{{'color:' + \\\" \\\" + data.color}}</li>\\r\\n    <li class=\\\"list-group-item\\\">{{'engineCode:' + \\\" \\\" + data.engineCode}}</li>\\r\\n    <li class=\\\"list-group-item\\\">{{'registrationDate:' + \\\" \\\" + data.registrationDate}}</li>\\r\\n    <li class=\\\"list-group-item\\\">{{'previousOwner:' + \\\" \\\" + data.previousOwner}}</li>\\r\\n    <li class=\\\"list-group-item\\\">{{'category:' + \\\" \\\" + data.category}}</li>\\r\\n    <li> <a routerLink=\\\"/car/{{data.Id}}/Addons\\\" routerLinkActive=\\\"active\\\" class=\\\"btn btn-primary\\\">AddOns</a></li>\\r\\n  </ul>\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"btnEdit()\\\">Edit</button>\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"btnDelete()\\\">Delete</button>\\r\\n</div>\\r\\n\\r\\n\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {DynamicComponentInterface} from '../../../Classes/dynamicCompInterface';\r\nimport {HttpCarService} from '../../../services/car/http-car.service';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-car-card',\r\n    templateUrl: './car-card.component.html',\r\n    styleUrls: ['./car-card.component.css']\r\n})\r\nexport class CarCardComponent implements OnInit, DynamicComponentInterface {\r\n\r\n    data: any;\r\n\r\n    constructor(private httpCarService: HttpCarService, private router: Router) {\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    btnEdit() {\r\n        this.router.navigate([`Cars/${this.data.Id}/Update`]);\r\n    }\r\n\r\n    btnDelete() {\r\n        this.httpCarService.deleteCar(this.data.id).subscribe(data => {\r\n                console.log(data);\r\n                this.router.navigate(['Cars']);\r\n            },\r\n            err => {\r\n                this.httpCarService.handleError(err);\r\n            }\r\n        );\r\n\r\n    }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"col-md-6\\\">\\r\\n    <ng-template appCardHost></ng-template>\\r\\n</div>\\r\\n<div class=\\\"col-md-6\\\">\\r\\n    <div class=\\\"card-img-bottom\\\">\\r\\n    </div>\\r\\n</div>\"","import {Component, ComponentFactoryResolver, Input, OnInit, ViewChild} from '@angular/core';\r\nimport {DynamicComponentInterface} from '../../../Classes/dynamicCompInterface';\r\nimport {CardHostDirective} from '../../../Directives/cardHostDirective/card-host.directive';\r\nimport {CardCompFactService} from '../../../services/cardCompFact/card-comp-fact.service';\r\n\r\n@Component({\r\n    selector: 'app-general-card',\r\n    templateUrl: './general-card.component.html',\r\n    styleUrls: ['./general-card.component.css']\r\n})\r\nexport class GeneralCardComponent implements OnInit {\r\n\r\n    @Input() data: any;\r\n    @Input() ItemType: string;\r\n    @ViewChild(CardHostDirective) appFormHost: CardHostDirective;\r\n\r\n    constructor(private componentFactoryResolver: ComponentFactoryResolver,\r\n                private cardCompFactService: CardCompFactService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        const comp = this.cardCompFactService.getCardComp(this.ItemType);\r\n        const componentFactory = this.componentFactoryResolver.resolveComponentFactory(comp);\r\n\r\n        const viewContainerRef = this.appFormHost.viewContainerRef;\r\n        viewContainerRef.clear();\r\n\r\n        const componentRef = viewContainerRef.createComponent(componentFactory);\r\n        (<DynamicComponentInterface>componentRef.instance).data = this.data;\r\n    }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\r\\n  mfg-recommendation-card works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-mfg-recommendation-card',\r\n  templateUrl: './mfg-recommendation-card.component.html',\r\n  styleUrls: ['./mfg-recommendation-card.component.css']\r\n})\r\nexport class MfgRecommendationCardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\r\\n  car-action-card works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {DynamicComponentInterface} from '../../../Classes/dynamicCompInterface';\r\n\r\n@Component({\r\n  selector: 'app-car-action-card',\r\n  templateUrl: './mini-car-action-card.component.html',\r\n  styleUrls: ['./mini-car-action-card.component.css']\r\n})\r\nexport class MiniCarActionCardComponent implements OnInit, DynamicComponentInterface {\r\n    data: any;\r\n\r\n\r\n    constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"card-block\\\">\\r\\n  <h4 class=\\\"card-title\\\">{{data.make + \\\" \\\" + data.model}}</h4>\\r\\n  <ul class=\\\"list-group list-group-flush\\\">\\r\\n    <li class=\\\"list-group-item\\\">{{'license Plate:' + \\\" \\\" + data.licensePlate}}</li>\\r\\n    <li class=\\\"list-group-item\\\">{{'Mileage:' + \\\" \\\" + data.mileage}}</li>\\r\\n    <li class=\\\"list-group-item\\\">{{'next Action:' + \\\" \\\" + data.nextAction}}</li>\\r\\n  </ul>\\r\\n  <a routerLink=\\\"/car/{{data.Id}}\\\" routerLinkActive=\\\"active\\\" class=\\\"btn btn-primary\\\">More Details</a>\\r\\n</div>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {DynamicComponentInterface} from '../../../Classes/dynamicCompInterface';\r\n\r\n@Component({\r\n    selector: 'app-car-card',\r\n    templateUrl: './mini-car-card.component.html',\r\n    styleUrls: ['./mini-car-card.component.css']\r\n})\r\nexport class MiniCarCardComponent implements OnInit, DynamicComponentInterface {\r\n    data: any;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\r\\n  mfg-recommendation-card works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {DynamicComponentInterface} from '../../../Classes/dynamicCompInterface';\r\n\r\n@Component({\r\n  selector: 'app-mfg-recommendation-card',\r\n  templateUrl: './mini-mfg-recommendation-card.component.html',\r\n  styleUrls: ['./mini-mfg-recommendation-card.component.css']\r\n})\r\nexport class MiniMfgRecommendationCardComponent implements OnInit, DynamicComponentInterface {\r\n    data: any;\r\n\r\n\r\n    constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\r\\n  user-card works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user-card',\r\n  templateUrl: './user-card.component.html',\r\n  styleUrls: ['./user-card.component.css']\r\n})\r\nexport class UserCardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<app-general-dashboard [Items]=\\\"actions\\\" [ItemType]=\\\"ItemType\\\"></app-general-dashboard>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {CarAction} from '../../../Classes/CarAction';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {HttpCarActionService} from '../../../services/carAction/http-car-action.service';\r\n\r\n@Component({\r\n    selector: 'app-actions-dashboard',\r\n    templateUrl: './actions-dashboard.component.html',\r\n    styleUrls: ['./actions-dashboard.component.css']\r\n})\r\nexport class ActionsDashboardComponent implements OnInit {\r\n\r\n    actions: CarAction[];\r\n    ItemType = 'miniCarAction';\r\n\r\n    constructor(private route: ActivatedRoute, private httpCarActionsService: HttpCarActionService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        const Id = this.route.snapshot.paramMap.get('id');\r\n        this.httpCarActionsService.getActionsOfCar(Id).subscribe(data => {\r\n            this.actions = data;\r\n        });\r\n    }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div *ngIf=\\\"Items.length === 0\\\">{{'No '+ItemType+'s'}}</div>\\r\\n    <div class=\\\"card\\\" *ngFor=\\\"let item of Items\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <app-general-card [data]=\\\"item\\\" [ItemType]=\\\"ItemType\\\"></app-general-card>\\r\\n        </div>\\r\\n    </div>\\r\\n    <button (click)=\\\"addItem()\\\">{{\\\"Add \\\" +ItemType}}</button>\\r\\n</div>\\r\\n\\r\\n\"","import {Component, OnInit, Input, ViewChild} from '@angular/core';\r\nimport {CardHostDirective} from '../../../Directives/cardHostDirective/card-host.directive';\r\nimport {Router} from '@angular/router';\r\n\r\n\r\n@Component({\r\n    selector: 'app-general-dashboard',\r\n    templateUrl: './general-dashboard.component.html',\r\n    styleUrls: ['./general-dashboard.component.css']\r\n})\r\nexport class GeneralDashboardComponent implements OnInit {\r\n\r\n    @Input() Items: any[];\r\n    @Input() ItemType: string;\r\n    @ViewChild(CardHostDirective) appFormHost: CardHostDirective;\r\n\r\n    constructor(private router: Router) {\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n    }\r\n\r\n    addItem() {\r\n        switch (this.ItemType) {\r\n            case 'car':\r\n                this.router.navigate(['Add-Car']);\r\n                break;\r\n            case 'carAction':\r\n                this.router.navigate(['Add-Car-Action']);\r\n                break;\r\n            case 'mfgRecomandation':\r\n                this.router.navigate(['Add-MFG-Recommendation']);\r\n                break;\r\n        }\r\n    }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<app-general-dashboard [Items]=\\\"cars\\\" [ItemType]=\\\"ItemType\\\"></app-general-dashboard>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {Car} from '../../../Classes/Car';\r\nimport {HttpCarService} from '../../../services/car/http-car.service';\r\nimport {HttpUserService} from '../../../services/user/http-user.service';\r\n\r\n@Component({\r\n    selector: 'app-main-dash-board',\r\n    templateUrl: './main-dash-board.component.html',\r\n    styleUrls: ['./main-dash-board.component.css']\r\n})\r\nexport class MainDashBoardComponent implements OnInit {\r\n\r\n    cars: Car[];\r\n    ItemType = 'miniCar';\r\n    userId: any;\r\n\r\n    constructor(private httpCarService: HttpCarService, private httpUser: HttpUserService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.userId = this.httpUser.userId;\r\n        this.httpCarService.getCarsOfUser(this.userId).subscribe(data =>\r\n            this.cars = data\r\n        );\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<app-general-dashboard [Items]=\\\"mfgRecommendations\\\" [ItemType]=\\\"ItemType\\\"></app-general-dashboard>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {MfgRecommendation} from '../../../Classes/MfgRecommendation';\r\nimport {HttpMfgRecommendationsService} from '../../../services/mfgRecomondations/http-mfg-recommendations.service';\r\n\r\n@Component({\r\n  selector: 'app-mfg-recommendations-dashboard',\r\n  templateUrl: './mfg-recommendations-dashboard.component.html',\r\n  styleUrls: ['./mfg-recommendations-dashboard.component.css']\r\n})\r\nexport class MfgRecommendationsDashboardComponent implements OnInit {\r\n\r\n    mfgRecommendations: MfgRecommendation[];\r\n    ItemType = 'miniMfgRecomandation';\r\n\r\n    constructor(private route: ActivatedRoute, private httpMfgRecomondationsService: HttpMfgRecommendationsService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        const Id = this.route.snapshot.paramMap.get('id');\r\n        this.httpMfgRecomondationsService.getMfgRecommendationsOfCar(Id).subscribe(data => {\r\n            this.mfgRecommendations = data;\r\n        });\r\n    }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\r\\n  car-action-form works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-car-action-form',\r\n  templateUrl: './car-action-form.component.html',\r\n  styleUrls: ['./car-action-form.component.css']\r\n})\r\nexport class CarActionFormComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<form #form=\\\"ngForm\\\" (ngSubmit)=\\\"btnAddCar(form.value)\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6 mb-3\\\">\\r\\n      <label>LicensePlate</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"licensePlate\\\"\\r\\n             [(ngModel)]=\\\"data.licensePlate\\\" #licensePlate=\\\"ngModel\\\" required>\\r\\n      <div class=\\\"messageError\\\"\\r\\n           *ngIf=\\\"licensePlate.invalid && (licensePlate.dirty || licensePlate.touched)\\\">\\r\\n        licensePlate is required.\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6 mb-3\\\">\\r\\n      <label>Make</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"make\\\" [(ngModel)]=\\\"data.make\\\"\\r\\n             #make=\\\"ngModel\\\" required>\\r\\n      <div class=\\\"messageError\\\" *ngIf=\\\"make.invalid && (make.dirty || make.touched)\\\">\\r\\n        make is required.\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"mb-3\\\">\\r\\n    <label>Model</label>\\r\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"model\\\" [(ngModel)]=\\\"data.model\\\"\\r\\n           #model=\\\"ngModel\\\" required>\\r\\n    <div class=\\\"messageError\\\" *ngIf=\\\"model.invalid && (model.dirty || model.touched)\\\">\\r\\n      model is required.\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"mb-3\\\">\\r\\n    <label>Color</label>\\r\\n    <select class=\\\"form-control\\\" name=\\\"color\\\" [(ngModel)]=\\\"data.color\\\" #color=\\\"ngModel\\\" required>\\r\\n      <option *ngFor=\\\"let c of colors\\\" [value]=\\\"c\\\">{{c}}</option>\\r\\n    </select>\\r\\n    <div class=\\\"messageError\\\" *ngIf=\\\"color.invalid && (color.dirty || color.touched)\\\">\\r\\n      Color is required.\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-6 mb-3\\\">\\r\\n    <label>EngineCode</label>\\r\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"engineCode\\\"\\r\\n           [(ngModel)]=\\\"data.engineCode\\\" #engineCode=\\\"ngModel\\\" required>\\r\\n    <div class=\\\"messageError\\\"\\r\\n         *ngIf=\\\"engineCode.invalid && (engineCode.dirty || engineCode.touched)\\\">\\r\\n      EngineCode is required.\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"mb-3\\\">\\r\\n    <label>Registration Date</label>\\r\\n    <input type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"registrationDate\\\"\\r\\n           [(ngModel)]=\\\"data.registrationDate\\\" #registrationDate=\\\"ngModel\\\" required>\\r\\n    <div class=\\\"messageError\\\"\\r\\n         *ngIf=\\\"registrationDate.invalid && (registrationDate.dirty || registrationDate.touched)\\\">\\r\\n      Registration Date is required.\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-6 mb-3\\\">\\r\\n    <label> previousOwner</label>\\r\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"previousOwner\\\"\\r\\n           [(ngModel)]=\\\"data.previousOwner\\\" #previousOwner=\\\"ngModel\\\" required>\\r\\n    <div class=\\\"messageError\\\"\\r\\n         *ngIf=\\\"previousOwner.invalid && (previousOwner.dirty || previousOwner.touched)\\\">\\r\\n      previousOwner is required.\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"mb-3\\\">\\r\\n    <label>Mileage</label>\\r\\n    <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"mileage\\\"\\r\\n           [(ngModel)]=\\\"data.mileage\\\" #mileage=\\\"ngModel\\\" required pattern=\\\"^[0-9]*$\\\">\\r\\n    <div class=\\\"messageError\\\"\\r\\n         *ngIf=\\\"mileage.invalid && (mileage.dirty || mileage.touched)\\\">\\r\\n      <div *ngIf=\\\"mileage?.errors.required\\\">\\r\\n        Mileage is required.\\r\\n      </div>\\r\\n      <div *ngIf=\\\"mileage?.errors.pattern\\\">\\r\\n        Mileage have to include only numbers.\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"mb-3\\\">\\r\\n    <label>Category</label>\\r\\n    <select class=\\\"form-control\\\" name=\\\"catagory\\\" [(ngModel)]=\\\"data.category\\\" #category=\\\"ngModel\\\" required>\\r\\n      <option *ngFor=\\\"let ca of categories\\\" [value]=\\\"ca\\\">{{ca}}</option>\\r\\n    </select>\\r\\n    <div class=\\\"messageError\\\" *ngIf=\\\"category.invalid && (category.dirty || category.touched)\\\">\\r\\n      Category is required.\\r\\n    </div>\\r\\n  </div>\\r\\n  <button class=\\\"btn btn-primary btn-lg btn-block\\\" type=\\\"submit\\\"\\r\\n          [disabled]=\\\"form.invalid\\\">Add Car</button>\\r\\n</form>\\r\\n\\r\\n\"","import {Component, Input, OnInit} from '@angular/core';\r\nimport {DynamicComponentInterface} from '../../../Classes/dynamicCompInterface';\r\nimport {Router} from '@angular/router';\r\nimport {ApiDataService} from '../../../services/Api/api-data.service';\r\nimport {colors} from '../../../Arrays/Colors';\r\nimport {Car} from '../../../Classes/Car';\r\nimport {HttpCarService} from '../../../services/car/http-car.service';\r\nimport {category} from '../../../Arrays/Category';\r\n\r\n@Component({\r\n    selector: 'app-car-form',\r\n    templateUrl: './car-form.component.html',\r\n    styleUrls: ['./car-form.component.css']\r\n})\r\nexport class CarFormComponent implements OnInit, DynamicComponentInterface {\r\n\r\n    @Input() data: any;\r\n    colors: string[] = colors;\r\n    categories: string[] = category;\r\n\r\n    constructor(private mapService: ApiDataService, private httpCar: HttpCarService,\r\n                private router: Router) {\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n    }\r\n\r\n    btnAddCar(car: Car) {\r\n        this.httpCar.addCar(car).subscribe(data => {\r\n                console.log(data);\r\n                this.router.navigate(['/Cars']);\r\n            },\r\n            err => {\r\n                this.httpCar.handleError(err);\r\n            }\r\n        );\r\n    }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"jumbotron\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-6 offset-sm-3\\\">\\r\\n        <ng-template appFormHost></ng-template>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"","import {Component, OnInit, ViewChild, ComponentFactoryResolver, Input} from '@angular/core';\r\nimport {FormHostDirective} from '../../../Directives/formHostDirective/form-host.directive';\r\nimport {FormCompFactoryService} from '../../../services/formCompFact/form-comp-factory.service';\r\nimport {DynamicComponentInterface} from '../../../Classes/dynamicCompInterface';\r\n\r\n@Component({\r\n    selector: 'app-general-form',\r\n    templateUrl: './general-form.component.html',\r\n    styleUrls: ['./general-form.component.css']\r\n})\r\nexport class GeneralFormComponent implements OnInit {\r\n\r\n    @Input() data: any;\r\n    @Input() formType: string;\r\n    @ViewChild(FormHostDirective) appFormHost: FormHostDirective;\r\n\r\n    constructor(private componentFactoryResolver: ComponentFactoryResolver,\r\n                private formFactService: FormCompFactoryService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        const comp = this.formFactService.getFormComp(this.formType);\r\n        const componentFactory = this.componentFactoryResolver.resolveComponentFactory(comp);\r\n\r\n        const viewContainerRef = this.appFormHost.viewContainerRef;\r\n        viewContainerRef.clear();\r\n\r\n        const componentRef = viewContainerRef.createComponent(componentFactory);\r\n        (<DynamicComponentInterface>componentRef.instance).data = this.data;\r\n    }\r\n\r\n}\r\n","module.exports = \".buttons{\\r\\n    display: flex;\\r\\n    justify-content: space-around;\\r\\n}\\r\\n\\r\\n.center{\\r\\n    margin-left: 25px;\\r\\n    margin-right: 25px;\\r\\n}\\r\\n\\r\\n.btn{\\r\\n    width: 160px;\\r\\n}\"","module.exports = \"<form #form=\\\"ngForm\\\" (ngSubmit)=\\\"btnAddUser(form.value)\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6 mb-3\\\">\\r\\n            <label>First name</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"firstName\\\"\\r\\n                   [(ngModel)]=\\\"data.firstName\\\" #firstName=\\\"ngModel\\\" required>\\r\\n            <div class=\\\"messageError\\\"\\r\\n                 *ngIf=\\\"firstName.invalid && (firstName.dirty || firstName.touched)\\\">\\r\\n                First name is required.\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6 mb-3\\\">\\r\\n            <label>Last name</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"lastName\\\" [(ngModel)]=\\\"data.lastName\\\"\\r\\n                   #lastName=\\\"ngModel\\\" required>\\r\\n            <div class=\\\"messageError\\\" *ngIf=\\\"lastName.invalid && (lastName.dirty || lastName.touched)\\\">\\r\\n                Last Name is required.\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"mb-3\\\">\\r\\n        <label>Username</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" placeholder=\\\"Username\\\"\\r\\n               [(ngModel)]=\\\"data.userName\\\" #username=\\\"ngModel\\\" required>\\r\\n        <div class=\\\"messageError\\\" *ngIf=\\\"username.invalid && (username.dirty || username.touched)\\\">\\r\\n            Your username is required.\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"mb-3\\\">\\r\\n        <label>Password</label>\\r\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" placeholder=\\\"Password\\\"\\r\\n               [(ngModel)]=\\\"data.password\\\" #password=\\\"ngModel\\\" required minlength=\\\"4\\\" required>\\r\\n        <div class=\\\"messageError\\\" *ngIf=\\\"password.invalid && (password.dirty || password.touched)\\\">\\r\\n            <div *ngIf=\\\"password?.errors.required\\\">\\r\\n                Password is required.\\r\\n            </div>\\r\\n            <div *ngIf=\\\"password?.errors.minlength\\\">\\r\\n                Password must be at least 4 characters long.\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"mb-3\\\">\\r\\n        <label>Date of birth</label>\\r\\n        <input type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"dateOfBirth\\\"\\r\\n               [(ngModel)]=\\\"data.dateOfBirth\\\" #dateOfBirth=\\\"ngModel\\\" required>\\r\\n        <div class=\\\"messageError\\\"\\r\\n             *ngIf=\\\"dateOfBirth.invalid && (dateOfBirth.dirty || dateOfBirth.touched)\\\">\\r\\n            Your date or birth is required.\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"mb-3\\\">\\r\\n        <label>Gender</label>\\r\\n        <select class=\\\"form-control\\\" name=\\\"gender\\\" [(ngModel)]=\\\"data.gender\\\" #gender=\\\"ngModel\\\" required>\\r\\n            <option *ngFor=\\\"let g of genders\\\" [value]=\\\"g\\\">{{g}}</option>\\r\\n        </select>\\r\\n        <div class=\\\"messageError\\\" *ngIf=\\\"gender.invalid && (gender.dirty || gender.touched)\\\">\\r\\n            Your gender is required.\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"mb-3\\\">\\r\\n        <label>phone number</label>\\r\\n        <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"phone\\\"\\r\\n               [(ngModel)]=\\\"data.phoneNumber\\\" #phone=\\\"ngModel\\\" required pattern=\\\"^[0-9]*$\\\"\\r\\n        >\\r\\n        <div class=\\\"messageError\\\"\\r\\n             *ngIf=\\\"phone.invalid && (phone.dirty || phone.touched)\\\">\\r\\n            <div *ngIf=\\\"phone?.errors.required\\\">\\r\\n                phone number is required.\\r\\n            </div>\\r\\n            <div *ngIf=\\\"phone?.errors.pattern\\\">\\r\\n                phone number have to include only numbers.\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"mb-3\\\">\\r\\n        <label>Email</label>\\r\\n        <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"data.email\\\" #email=\\\"ngModel\\\" required email>\\r\\n        <div class=\\\"messageError\\\"\\r\\n             *ngIf=\\\"email.invalid && (email.dirty || email.touched)\\\">\\r\\n            <div *ngIf=\\\"email?.errors.required\\\">\\r\\n                Email is required.\\r\\n            </div>\\r\\n            <div *ngIf=\\\"email?.errors.email\\\">\\r\\n                Email must be a valid email address\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6 mb-3\\\">\\r\\n            <label>Country</label>\\r\\n            <select class=\\\"form-control\\\" name=\\\"country\\\" [(ngModel)]=\\\"data.country\\\" #country=\\\"ngModel\\\">\\r\\n                <option *ngFor=\\\"let c of countries\\\" [value]=\\\"c\\\">{{c}}</option>\\r\\n            </select>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6 mb-3\\\">\\r\\n            <label>City</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"city\\\" [(ngModel)]=\\\"data.city\\\"\\r\\n                   #city=\\\"ngModel\\\">\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"mb-3\\\">\\r\\n        <label>Street</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"street\\\"\\r\\n               [(ngModel)]=\\\"data.street\\\" #street=\\\"ngModel\\\">\\r\\n    </div>\\r\\n    <div class=\\\"buttons\\\">\\r\\n        <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\">Sign Up</button>\\r\\n        <button class=\\\"btn btn-primary center\\\" (click)=\\\"clear()\\\">Clear</button>\\r\\n        <button class=\\\"btn btn-primary\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n    </div>\\r\\n</form>\\r\\n\"","import {Component, OnInit, Input} from '@angular/core';\r\nimport {genders} from '../../../Arrays/Genders';\r\nimport {HttpUserService} from '../../../services/user/http-user.service';\r\nimport {User} from '../../../Classes/User';\r\nimport {ApiDataService} from '../../../services/Api/api-data.service';\r\nimport {DynamicComponentInterface} from '../../../Classes/dynamicCompInterface';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-user-form',\r\n    templateUrl: './user-form.component.html',\r\n    styleUrls: ['./user-form.component.css']\r\n})\r\nexport class UserFormComponent implements OnInit, DynamicComponentInterface {\r\n\r\n    @Input() data: any;\r\n    genders: string[] = genders;\r\n    countries: string[];\r\n\r\n\r\n    constructor(private mapService: ApiDataService, private httpUser: HttpUserService,\r\n                private router: Router) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.mapService.$countries.subscribe(data => {\r\n            this.countries = data.map(rec => rec.name);\r\n        });\r\n    }\r\n\r\n    btnAddUser(user: User) {\r\n        this.httpUser.addUser(user).subscribe(data => {\r\n                console.log(data);\r\n                this.httpUser.userId = data.Id;\r\n                this.router.navigate(['/Cars']);\r\n            },\r\n            err => {\r\n                this.httpUser.handleError(err);\r\n            }\r\n        );\r\n    }\r\n\r\n    clear() {\r\n\r\n    }\r\n\r\n    cancel() {\r\n\r\n    }\r\n\r\n}\r\n","module.exports = \".main{\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    background: url('keeper.jpg')no-repeat center center fixed;\\r\\n    background-size: cover;\\r\\n}\"","module.exports = \"<div class=\\\"main\\\"></div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"#extended-nav {\\r\\n    padding: 0 30px;\\r\\n    background: #283e4a;\\r\\n    border-top: none;\\r\\n    box-shadow: none;\\r\\n    height: 75px;\\r\\n}\\r\\n\\r\\n.logo{\\r\\n    height: 60px;\\r\\n    width: 70px;\\r\\n}\\r\\n\\r\\n.title{\\r\\n    color: white;\\r\\n}\"","module.exports = \"<nav id=\\\"extended-nav\\\" class=\\\"navbar\\\">\\r\\n    <span class=\\\"navbar-brand title\\\"><a routerLink=\\\"/Home\\\" routerLinkActive=\\\"active\\\"><img class=\\\"logo navbar-brand\\\" src=\\\"../../../assets/logo.jpeg\\\"></a>CarKeeper</span>\\r\\n    <div class=\\\"navbar-brand ml-auto\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary navbar-brand\\\" routerLink=\\\"/Sign_In\\\" routerLinkActive=\\\"active\\\">Sign In</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary navbar-brand\\\" (click)=\\\"btnSignUp()\\\" routerLink=\\\"/Sign_Up\\\" routerLinkActive=\\\"active\\\">Sign Up</button>\\r\\n    </div>\\r\\n</nav>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-nav-bar',\r\n    templateUrl: './nav-bar.component.html',\r\n    styleUrls: ['./nav-bar.component.css']\r\n})\r\nexport class NavBarComponent implements OnInit {\r\n\r\n    constructor() {\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    btnSignUp() {\r\n\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<h3>\\r\\n  404 - Not Found\\r\\n</h3>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-page-not-found-component',\r\n  templateUrl: './page-not-found-component.component.html',\r\n  styleUrls: ['./page-not-found-component.component.css']\r\n})\r\nexport class PageNotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".messageError{\\r\\n    width: 100%;\\r\\n    margin-top: .25rem;\\r\\n    font-size: 80%;\\r\\n    color: #dc3545;\\r\\n}\"","module.exports = \"\\r\\n<app-general-form [data]=\\\"user\\\" [formType]=\\\"formType\\\"></app-general-form>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {User} from '../../Classes/User';\r\n\r\n@Component({\r\n    selector: 'app-add-user',\r\n    templateUrl: './register.component.html',\r\n    styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent {\r\n\r\n    user: User = new User();\r\n    formType = 'user';\r\n\r\n    constructor() {\r\n\r\n    }\r\n}\r\n","module.exports = \"label{\\r\\n    display: block;\\r\\n}\\r\\n\\r\\ninput{\\r\\n    width: 350px;\\r\\n}\"","module.exports = \"<div class=\\\"jumbotron\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6 offset-sm-3\\\">\\r\\n                <h2>Login</h2>\\r\\n                <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"btnLogin()\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label >Username</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"formControl\\\" name=\\\"username\\\" ngModel #userName=\\\"ngModel\\\" required/>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Password</label>\\r\\n                        <input type=\\\"password\\\" class=\\\"formControl\\\" name=\\\"password\\\" ngModel #password=\\\"ngModel\\\"\\r\\n                               required/>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <button class=\\\"btn btn-primary\\\">Login</button>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sign-in',\r\n  templateUrl: './sign-in.component.html',\r\n  styleUrls: ['./sign-in.component.css']\r\n})\r\nexport class SignInComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n    btnLogin(){\r\n\r\n    }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {RegisterComponent} from '../components/register/register.component';\r\nimport {SignInComponent} from '../components/sign-in/sign-in.component';\r\nimport {AppComponent} from '../components/app/app.component';\r\nimport {PageNotFoundComponent} from '../components/page-not-found-component/page-not-found-component.component';\r\nimport {MainDashBoardComponent} from '../components/dashboards/main-dash-board/main-dash-board.component';\r\nimport {AddCarComponent} from '../components/Add-Items/add-car/add-car.component';\r\nimport {AddCarActionComponent} from '../components/Add-Items/add-car-action/add-car-action.component';\r\nimport {AddMfgRecommendationComponent} from '../components/Add-Items/add-mfg-recommendation/add-mfg-recommendation.component';\r\nimport {CarDetailsComponent} from '../components/Item-details/car-details/car-details.component';\r\nimport {AddOnsComponent} from '../components/add-ons/add-ons.component';\r\nimport {UpdateCarComponent} from '../components/Update-Items/update-car/update-car.component';\r\nimport {HomeComponent} from '../components/home/home.component';\r\nimport {ActionsDashboardComponent} from '../components/dashboards/actions-dashboard/actions-dashboard.component';\r\nimport {MfgRecommendationsDashboardComponent} from '../components/dashboards/mfg-recommendations-dashboard/mfg-recommendations-dashboard.component';\r\n\r\nconst routes: Routes = [\r\n    {path: 'Sign_In', component: SignInComponent},\r\n    {path: 'Sign_Up', component: RegisterComponent},\r\n    {path: 'Home', component: HomeComponent},\r\n    {path: 'Cars/:id/Actions', component: ActionsDashboardComponent},\r\n    {path: 'Cars/:id/Manufacturer-recommendations', component: MfgRecommendationsDashboardComponent},\r\n    {path: 'Cars/:id/Update', component: UpdateCarComponent},\r\n    {path: 'Cars/:id/AddOns', component: AddOnsComponent},\r\n    {path: 'Cars/:id', component: CarDetailsComponent},\r\n    {path: 'Cars', component: MainDashBoardComponent},\r\n    {path: 'Add-Car', component: AddCarComponent},\r\n    {path: 'Add-Car-Action', component: AddCarActionComponent},\r\n    {path: 'Add-MFG-Recommendation', component: AddMfgRecommendationComponent},\r\n    {path: '', redirectTo: '/Home', pathMatch: 'full'},\r\n    {path: '**', component: PageNotFoundComponent}\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forRoot(routes)\r\n\r\n    ],\r\n    declarations: [],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\nexport class RoutingModule {\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {User} from '../../Classes/User';\r\nimport {Observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ApiDataService {\r\n\r\n    $countries: Observable<any>;\r\n\r\n    constructor(private http: HttpClient) {\r\n        this.$countries = this.http.get('https://restcountries.eu/rest/v2/all?fields=name');\r\n    }\r\n\r\n//     fetch(\r\n//\r\n//     'https://restcountries.eu/rest/v2/all?fields=name';\r\n// )\r\n// .\r\n//\r\n//     then(\r\n//\r\n// (\r\n//     resp;\r\n// ) =>\r\n//     resp;\r\n// .\r\n//\r\n//     json()\r\n//\r\n// )\r\n// .\r\n//\r\n//     then(data\r\n//\r\n// => {\r\n//     this;\r\n// .\r\n//     countries = data.map(c => c.name);\r\n// }\r\n//\r\n// )\r\n// ;\r\n// }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Car} from '../../Classes/Car';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class HttpCarService {\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getCarsOfUser(userid: any): Observable<Car[]> {\r\n        return this.http.get<Car[]>(`api/user-main/${userid}`);\r\n    }\r\n\r\n    getCar(carId: any): Observable<Car> {\r\n        return this.http.get<Car>(`api/car/${carId}`);\r\n    }\r\n\r\n\r\n    handleError(error: HttpErrorResponse) {\r\n        if (error.error instanceof ErrorEvent) {\r\n            // A client-side or network error occurred. Handle it accordingly.\r\n            console.error('An error occurred:', error.error.message);\r\n        } else {\r\n            // The backend returned an unsuccessful response code.\r\n            // The response body may contain clues as to what went wrong,\r\n            console.error(\r\n                `Backend returned code ${error.status}, ` +\r\n                `body was: ${error.error}`);\r\n        }\r\n    }\r\n\r\n    addCar(car: any) {\r\n        return this.http.post<Car>('api/car', car);\r\n    }\r\n\r\n    deleteCar(Id: number): any {\r\n        return this.http.delete(`api/car/${Id}`);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {CarAction} from '../../Classes/CarAction';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpCarActionService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n    getActionsOfCar(carId: any): Observable<CarAction[]> {\r\n        return this.http.get<CarAction[]>(`api/car-actions/${carId}`);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {MiniCarCardComponent} from '../../components/cards/mini-car-card/mini-car-card.component';\r\nimport {MiniCarActionCardComponent} from '../../components/cards/mini-car-action-card/mini-car-action-card.component';\r\nimport {MiniMfgRecommendationCardComponent} from '../../components/cards/mini-mfg-recommendation-card/mini-mfg-recommendation-card.component';\r\nimport {CarCardComponent} from '../../components/cards/car-card/car-card.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CardCompFactService {\r\n\r\n  constructor() { }\r\n\r\n    getCardComp(name: string): any {\r\n\r\n        switch (name) {\r\n            case 'car':\r\n                return CarCardComponent;\r\n            case 'miniCar':\r\n                return MiniCarCardComponent;\r\n            case 'miniCarAction':\r\n                return MiniCarActionCardComponent;\r\n            case 'miniMfgRecomandation':\r\n                return MiniMfgRecommendationCardComponent;\r\n        }\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {UserFormComponent} from '../../components/forms/user-form/user-form.component';\r\nimport {CarFormComponent} from '../../components/forms/car-form/car-form.component';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class FormCompFactoryService {\r\n\r\n    constructor() {\r\n    }\r\n\r\n    getFormComp(name: string): any {\r\n\r\n        switch (name) {\r\n            case 'user':\r\n                return UserFormComponent;\r\n            case 'car':\r\n                return CarFormComponent;\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {MfgRecommendation} from '../../Classes/MfgRecommendation';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpMfgRecommendationsService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n    getMfgRecommendationsOfCar(carId: any): Observable<MfgRecommendation[]> {\r\n        return this.http.get<MfgRecommendation[]>(`api/Manufacturer-recommendations/${carId}`);\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {User} from '../../Classes/User';\r\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class HttpUserService {\r\n\r\n    userId: any;\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    addUser(user: User): Observable<User> {\r\n        return this.http.post<User>('api/sign-up', user);\r\n    }\r\n\r\n    handleError(error: HttpErrorResponse) {\r\n        if (error.error instanceof ErrorEvent) {\r\n            // A client-side or network error occurred. Handle it accordingly.\r\n            console.error('An error occurred:', error.error.message);\r\n        } else {\r\n            // The backend returned an unsuccessful response code.\r\n            // The response body may contain clues as to what went wrong,\r\n            console.error(\r\n                `Backend returned code ${error.status}, ` +\r\n                `body was: ${error.error}`);\r\n        }\r\n    }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}